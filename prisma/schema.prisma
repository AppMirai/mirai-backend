// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id             Int            @id @default(autoincrement())
  full_name      String         @db.VarChar(255)
  email          String         @unique @db.VarChar(100)
  password       String         @db.VarChar(255)
  photo_user_url String?        @default("public/images/") @db.VarChar(255)
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  product_like   product_like[]
}

model products {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  price                 Float
  description           String                  @db.Text
  link_tokopedia        String                  @db.VarChar(255)
  link_shopee           String                  @db.VarChar(255)
  product_image_url     String
  category_id           Int
  brand_id              Int
  created_at            DateTime                @default(now())
  updated_at            DateTime                @updatedAt
  product_shades        product_shades[]
  product_images_detail product_images_detail[]
  product_like          product_like[]
  category              categories              @relation(fields: [category_id], references: [id], onDelete: Cascade)
  brand                 brands                  @relation(fields: [brand_id], references: [id], onDelete: Cascade)
}

model product_shades {
  id         Int      @id @default(autoincrement())
  name_shade String   @db.VarChar(255)
  product_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  product    products @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model product_images_detail {
  id                Int      @id @default(autoincrement())
  photo_product_url String   @db.Text
  product_id        Int
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  product           products @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model product_like {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int      @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  product    products @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model categories {
  id                 Int        @id @default(autoincrement())
  name               String     @db.VarChar(255)
  category_image_url String     @db.Text
  created_at         DateTime   @default(now())
  updated_at         DateTime   @updatedAt
  products           products[]
}

model brands {
  id              Int        @id @default(autoincrement())
  name            String     @db.VarChar(255)
  brand_image_url String     @db.Text
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
  products        products[]
}

model banner_images {
  id         Int      @id @default(autoincrement())
  image_url  String   @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
